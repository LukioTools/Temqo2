
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp__ee_cpp__adaptor__H__
#define __sdbuscpp__ee_cpp__adaptor__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace org {
namespace mpris {
namespace MediaPlayer2 {
namespace Temqo {

class MPRIS_PLAYER_adaptor
{
public:
    static constexpr const char* INTERFACE_NAME = "org.mpris.MediaPlayer2.Temqo.MPRIS_PLAYER";

protected:
    MPRIS_PLAYER_adaptor(sdbus::IObject& object)
        : object_(&object)
    {
        object_->registerMethod("PlayPause").onInterface(INTERFACE_NAME).implementedAs([this](){ return this->PlayPause(); });
        object_->registerMethod("Next").onInterface(INTERFACE_NAME).implementedAs([this](){ return this->Next(); });
    }

    MPRIS_PLAYER_adaptor(const MPRIS_PLAYER_adaptor&) = delete;
    MPRIS_PLAYER_adaptor& operator=(const MPRIS_PLAYER_adaptor&) = delete;
    MPRIS_PLAYER_adaptor(MPRIS_PLAYER_adaptor&&) = default;
    MPRIS_PLAYER_adaptor& operator=(MPRIS_PLAYER_adaptor&&) = default;

    ~MPRIS_PLAYER_adaptor() = default;

private:
    virtual void PlayPause() = 0;
    virtual void Next() = 0;

private:
    sdbus::IObject* object_;
};

}}}} // namespaces

#endif
