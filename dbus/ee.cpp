
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp__ee_cpp__proxy__H__
#define __sdbuscpp__ee_cpp__proxy__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace org {
namespace mpris {
namespace MediaPlayer2 {
namespace Temqo {

class MPRIS_PLAYER_proxy
{
public:
    static constexpr const char* INTERFACE_NAME = "org.mpris.MediaPlayer2.Temqo.MPRIS_PLAYER";

protected:
    MPRIS_PLAYER_proxy(sdbus::IProxy& proxy)
        : proxy_(&proxy)
    {
    }

    MPRIS_PLAYER_proxy(const MPRIS_PLAYER_proxy&) = delete;
    MPRIS_PLAYER_proxy& operator=(const MPRIS_PLAYER_proxy&) = delete;
    MPRIS_PLAYER_proxy(MPRIS_PLAYER_proxy&&) = default;
    MPRIS_PLAYER_proxy& operator=(MPRIS_PLAYER_proxy&&) = default;

    ~MPRIS_PLAYER_proxy() = default;

public:
    void PlayPause()
    {
        proxy_->callMethod("PlayPause").onInterface(INTERFACE_NAME);
    }

    void Next()
    {
        proxy_->callMethod("Next").onInterface(INTERFACE_NAME);
    }

private:
    sdbus::IProxy* proxy_;
};

}}}} // namespaces

#endif
